@startuml visitor
hide empty members

interface Visitor {
    +visitElementA(element: ElementA): void
    +visitElementB(element: ElementB): void
}

interface Element {
    +accept(visitor: Visitor): void
}

class ConcreteVisitor1 implements Visitor {
    +visitElementA(element: ConcreteElementA): void
    +visitElementB(element: ConcreteElementB): void
}
class ConcreteVisitor2 implements Visitor {
    +visitElementA(element: ConcreteElementA): void
    +visitElementB(element: ConcreteElementB): void
}

class ConcreteElementA implements Element {
    +accept(visitor: Visitor): void
}

class ConcreteElementB implements Element {
    +accept(visitor: Visitor): void
}
class ObjectStructure{}

ObjectStructure -> Element
class Client{}
Client -> Visitor
Client --> ObjectStructure

@enduml
